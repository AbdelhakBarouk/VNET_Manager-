/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Rest_Api;

//import TEST.*;
import Rest_Api.*;
//import REST.hello;
//import static REST.hello.BestPathBetweenAll;
//import static REST.hello.generate_num_vlan;
//import static Rest_Api.REST.GetLinks;
//import static Rest_Api.REST.GetSwitches;
//import static Rest_Api.REST.IpValidateur;
//import static Rest_Api.REST.TestIpControleur;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Label;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.binding.Bindings;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.validator.routines.InetAddressValidator;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author hako
 */
public class VNET_MAnager extends javax.swing.JFrame {

    
    
      //tables
      static DefaultTableModel addresses;
      static DefaultTableModel routes;
      public static String swId; 
      
      //IP controller @
      static String IP;
      
      //MAJ variables
      static int MAJoption;
      static String NomVnetMAJ;
      static ArrayList<Integer> edgevnetaMAJ=new ArrayList<> ();
      static ArrayList<Integer> edgevnetaMAJmodify=new ArrayList<> ();
      static JSONObject VNET_MAJ=new JSONObject();
      
      static int NbrSwitchTopoloigy; 
     //variables create VNET
      static int NumVlan;  //VLAN_ID
      static String NomVlan;//le nom de VLAN 
      static ArrayList<Integer>VlanEdges=new ArrayList<Integer>(); //les edge switches de vlan
      static ArrayList<Integer>combinarrayEdge=new ArrayList<Integer>();//just pour copier le "vlanedges array khatrach ga3ad ne siprimer fe combination function"
      

      //variable configuration VNET
      static String nomVnetAconfigurer;
      //variable afficher configuration
      static String config;
     //concerned the best path function  
      static ArrayList<ArrayList<Integer>> adj = new ArrayList<ArrayList<Integer>>(NbrSwitchTopoloigy+1);
      static JSONArray BestPathAllEdgeVlan = new JSONArray();
      static JSONArray TheCombinition;

      static Point p=new Point(210, 30);
      //variable databse conection
      static String user_DB="root";
      static String passw="";
      static String database="jdbc:mysql://localhost/sdn?useTimezone=true&serverTimezone=UTC";   
      static Connection con ;
      static PreparedStatement pst = null;
      Statement req; 
      static ResultSet res=null; 
      String libelle; 
      int code;
      int i;
    
    public VNET_MAnager() {
        initComponents();
        addresses=(DefaultTableModel) jTable1.getModel();
        //routes=(DefaultTableModel) jTable2.getModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        IPCONT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton15 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox<>();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jComboBox11 = new javax.swing.JComboBox<>();
        jButton18 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton13 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton12 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("jLabel8");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 27, -1, -1));

        jButton21.setText("jButton21");
        jPanel4.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 23, -1, -1));

        jCheckBox1.setText("jCheckBox1");
        jPanel4.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 64, -1, -1));

        jRadioButton1.setText("jRadioButton1");
        jPanel4.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 64, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Introduisez l‘@IP du contrôleur");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 230, 50));

        IPCONT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IPCONTMouseClicked(evt);
            }
        });
        IPCONT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPCONTActionPerformed(evt);
            }
        });
        getContentPane().add(IPCONT, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 360, 40));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 20, 80, 60));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Créer un VNET ");
        jButton2.setEnabled(false);
        jButton2.setOpaque(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 220, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Configurer un VNET ");
        jButton3.setEnabled(false);
        jButton3.setOpaque(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 220, 40));

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Supprimer un VNET ");
        jButton6.setEnabled(false);
        jButton6.setOpaque(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 220, 40));

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("MAJ d’un VNET ");
        jButton8.setEnabled(false);
        jButton8.setOpaque(false);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 220, 40));

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Afficher la configuration d’un VNET ");
        jButton5.setEnabled(false);
        jButton5.setOpaque(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 220, 50));

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 153));
        jLabel4.setText("Choisir le VNET à configurer");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 12, 180, 24));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 152, -1));

        jButton15.setText("Procéder à la configuration");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, -1, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 560, 120));

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jPanel7.setOpaque(false);
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 153));
        jLabel14.setText("Choisir le VNET  a MAJ");
        jLabel14.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });
        jPanel7.add(jComboBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 170, -1));
        jPanel7.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 121, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 153));
        jLabel15.setText("Nom du VNET");
        jLabel15.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 153));
        jLabel16.setText("Liste des Edge-Switchs du VNET");
        jLabel16.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 137, 210, -1));

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel7.add(jComboBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 80, -1));

        jButton16.setText("Supprimer l’élément sélectionné");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 210, -1));

        jButton17.setText("Ajouter un Edge-Switch");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });
        jPanel7.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 210, -1));

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel7.add(jComboBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 80, 20));

        jButton18.setText("MAJ du VNET");
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton18MouseClicked(evt);
            }
        });
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 130, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 153));
        jLabel12.setText("Liste de tous les switchs ");
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 690, 260));

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 153));
        jLabel5.setText("Choisir le VNET à supprimer");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 180, 20));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 270, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setText("Choisir l’option de suppression");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 20));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 270, -1));

        jButton13.setText("Supprimer le VNET");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton13MouseEntered(evt);
            }
        });
        jPanel2.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 140, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 560, 190));

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Afficher la topologie réseau");
        jButton4.setEnabled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 220, 40));

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jPanel6.setOpaque(false);
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox6MouseClicked(evt);
            }
        });
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 153));
        jLabel7.setText("Choisir le VNET à afficher");
        jLabel7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 170, -1));

        jPanel5.setOpaque(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Switch ID", "configuration"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 153));
        jLabel11.setText("Switchs du VNET");
        jLabel11.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 153));
        jLabel10.setText("Numéro de VLAN");
        jLabel10.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 153));
        jLabel9.setText("Nom du VNET");
        jLabel9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 600, 260));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 640, 320));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 204), 1, true));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setText("Nom du VNET");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 31, 100, -1));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 130, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 90, -1));

        jButton10.setText("Ajouter un Edge-Switch au VNET");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 240, -1));

        jButton11.setText("Supprimer le Edge-Switch du VNET");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 240, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 120, 96, 20));

        jButton12.setText("Créer le VNET");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton12MouseEntered(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 190, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setText("Choisir un Switch");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 690, 240));

        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom du VNET", "Numéro de VLAN", "Liste des Edge-Switchs", "Etat opérationnel"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 662, 229));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 690, 270));

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Afficher les informations de tout les VNET");
        jButton7.setEnabled(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 490, 240, 50));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rest_Api/2.jpg"))); // NOI18N
        jLabel13.setText("jLabel13");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
          jPanel1.setVisible(true);
          jPanel2.setVisible(false);
          jPanel3.setVisible(false);
          jPanel6.setVisible(false);
          jPanel7.setVisible(false);
          jPanel8.setVisible(false);

        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
         try {
          GetSwitches(jComboBox1);
          } catch (IOException ex) {
             Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
            }     
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

        jComboBox3.removeAllItems();
          jPanel1.setVisible(false);
          jPanel2.setVisible(false);
          jPanel3.setVisible(true);
          jPanel6.setVisible(false);
          jPanel7.setVisible(false);
          jPanel8.setVisible(false);
          //try hadi for get the vlan that the administrator wanna configure 
          try {            
              GetVnets("select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.IsConfigured'))='non'");             
              while(res.next()){
                   
               String s=res.getString("vnet");
               JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
               jComboBox3.insertItemAt(j.get("NomVlan").toString(),0);
          }} catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          //configurer les addressse des edges 
          //configurer les addressse des edges 
          //configurer les addressse des edges 
          //configurer les addressse des edges 
          

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IPCONTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPCONTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPCONTActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
          jPanel1.setVisible(false);
          jPanel2.setVisible(true);
          jPanel3.setVisible(false);
          jPanel6.setVisible(false);
          jPanel7.setVisible(false);
          jPanel8.setVisible(false);
        jComboBox4.removeAllItems();
        jComboBox5.removeAllItems();
          try {            
              GetVnets("select * from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.IsConfigured'))='yes'");             
              while(res.next()){
                   
               String s=res.getString("vnet");
               JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
               jComboBox4.insertItemAt(j.get("NomVlan").toString(),0);
          }} catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          jComboBox5.insertItemAt("Dlete all information concerned to this VNET", 0);
          jComboBox5.insertItemAt("keep the Vnet information in the DB", 0);
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
          jPanel1.setVisible(false);
          jPanel2.setVisible(false);
          jPanel3.setVisible(false);
          jPanel6.setVisible(true);
          jPanel7.setVisible(false);
          jPanel8.setVisible(false);
          jPanel5.setVisible(false);
          jComboBox6.removeAllItems();
                    try {            
              GetVnets("select * from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.IsConfigured'))='yes'");             
              while(res.next()){
                   
               String s=res.getString("vnet");
               JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
               jComboBox6.insertItemAt(j.get("NomVlan").toString(),0);
          }} catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          
    }//GEN-LAST:event_jButton5MouseClicked

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        if(combinarrayEdge.contains(Integer.parseInt(jComboBox1.getSelectedItem().toString()))){}
        else{        
        combinarrayEdge.add(Integer.parseInt(jComboBox1.getSelectedItem().toString()));        
        VlanEdges.add(Integer.parseInt(jComboBox1.getSelectedItem().toString()));
        System.out.println(VlanEdges);
        jComboBox2.insertItemAt(jComboBox1.getSelectedItem().toString(),0);
        }
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
      jComboBox2.removeItem(jComboBox1.getSelectedItem());
      VlanEdges.remove(new Integer (Integer.parseInt((String) jComboBox1.getSelectedItem())));
      combinarrayEdge.remove(new Integer (Integer.parseInt((String) jComboBox1.getSelectedItem())));
        System.out.println(VlanEdges);

    }//GEN-LAST:event_jButton11MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
         NumVlan=generate_num_vlan();
         try {                                       
             
             NomVlan=jTextField4.getText();   //nahtajo
             //verifier est que ce nom il existe deja dans la base de donnee
             String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVlan+"'";
             GetVnets(sql);
             if(res.next()){
               JOptionPane.showMessageDialog(null, "the '"+NomVlan+"'is exist \n please change it !!!", "Error", JOptionPane.ERROR_MESSAGE);   
             }else{
                if(VlanEdges.size()<2){
                JOptionPane.showMessageDialog(null, "le vnet contient  au minimum 2 edges switch!!!", "Error", JOptionPane.ERROR_MESSAGE);   
  
                 }else{
             
             
             //verifie est que le vlan generer il exist deja dans la base de donnee
             ArrayList<Integer>E=new ArrayList<>();
             //sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NumVlan'))='"+NumVlan+"'";
             sql="select *from `vnet_created`";
             GetVnets(sql);
             ArrayList<Integer>listnumvlan=new ArrayList<>();
             while(res.next()){
             String s=res.getString("vnet");    
             JSONObject j=new JSONObject(s);
             listnumvlan.add(j.getInt("NumVlan"));
             }
             while(listnumvlan.contains(NumVlan)){
              NumVlan=generate_num_vlan();
             }
             if( jTextField4.getText().isEmpty())NomVlan="VNET"+NumVlan;
             else NomVlan=jTextField4.getText();
             JSONObject InsertObject=new JSONObject();
             InsertObject.put("NomVlan",NomVlan.toString());
             InsertObject.put("NumVlan",NumVlan);
             //JSONArray edges=new JSONArray(VlanEdges);
             //System.out.println(edges);
             for (int i = 0; i < NbrSwitchTopoloigy+1; i++) {
                 adj.add(new ArrayList<Integer>());
             }
             try {
                 BestPathBetweenAll();
             } catch (IOException ex) {
                 Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
             }
             
             
             InsertObject.put("EdgeVlan",VlanEdges);
             InsertObject.put("Combinations",TheCombinition);
             InsertObject.put("BestPathBetweenAll",BestPathAllEdgeVlan);
             InsertObject.put("IsConfigured","non");
             System.out.println(InsertObject);
             //inserer dans la bdd le Vnet cree
             try {
                 con =DriverManager.getConnection(database,user_DB,passw);
             } catch (SQLException ex) {
                 Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
             }
             String sql1="insert into vnet_created values(?)";
             try{
                 pst=con.prepareStatement(sql1);
                 pst.setString(1,InsertObject.toString());
                 int nb;
                 nb=pst.executeUpdate();
                 for (int j = 0; j <combinarrayEdge.size()+1; j++) {
                     
                     combinarrayEdge.clear();
                 }
                 for (int j = 0; j < VlanEdges.size()+1; j++) {
                     
                     VlanEdges.clear();
                 }
                BestPathAllEdgeVlan=new JSONArray();
                 jComboBox2.removeAllItems();
   JOptionPane.showMessageDialog(null, "Le VNET à été créer avec succés ", "", JOptionPane.INFORMATION_MESSAGE);   

             }
             
             catch(Exception e){
                 System.out.println("error");
             }
             
         }}} catch (IOException ex) {
             Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }

    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        ValidatIPcontroller();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        if(jComboBox3.getSelectedItem()==null){
               JOptionPane.showMessageDialog(null, "Aucune VNET selectionnée pour configuré \n choisir un VNET puis click sur ce BUTTON !!!", "Error", JOptionPane.ERROR_MESSAGE);               
        }else{
        ConfigurerVnet((String) jComboBox3.getSelectedItem());
   JOptionPane.showMessageDialog(null, "Le VNET à été configurer avec succés ", "", JOptionPane.INFORMATION_MESSAGE);   

        }
        
    }//GEN-LAST:event_jButton15MouseClicked

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
      SupprimerConfigurationVNET(jComboBox4);
      if(jComboBox5.getSelectedIndex()==0){  
        String sql1="UPDATE `vnet_created` SET `VNET`=JSON_SET(vnet, '$.IsConfigured', 'non') where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+jComboBox4.getSelectedItem()+"'";
          try {
              pst=con.prepareStatement(sql1);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
        int nb;
          try {   
              nb=pst.executeUpdate();
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
       }else{
        String sql1="DELETE FROM `vnet_created` WHERE JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+jComboBox4.getSelectedItem()+"'";
          try {
              pst=con.prepareStatement(sql1);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
        int nb;
          try {
              nb=pst.executeUpdate();
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
         } 
             JOptionPane.showMessageDialog(null, "Le VNET à été supprimer avec succés ", "", JOptionPane.INFORMATION_MESSAGE);   

        jComboBox4.removeAllItems();
        //jComboBox5.removeAllItems();
          try {            
              GetVnets("select * from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.IsConfigured'))='yes'");             
              while(res.next()){
                   
               String s=res.getString("vnet");
               JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
               jComboBox4.insertItemAt(j.get("NomVlan").toString(),0);
          }} catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13MouseEntered

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jButton12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12MouseEntered

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
                jComboBox4.addItemListener(new ItemListener() {
               @Override
               public void itemStateChanged(ItemEvent e) {

                   if(e.getStateChange()==ItemEvent.SELECTED){
                     MAJoption=jComboBox4.getSelectedIndex();
                       //System.out.println(jComboBox10.getSelectedItem()); 
                    }
                }
               
           });
     if(jComboBox4.getSelectedItem()==null){
     jButton13.setVisible(false);
     jComboBox5.setVisible(false);
     jLabel6.setVisible(false);
     }else{
     jComboBox5.removeAllItems();
     jComboBox5.insertItemAt("Supprimer entièrement le VNET ", 0);
     jComboBox5.insertItemAt("Garder les informations du VNET dans la BDD ", 0);
     jComboBox5.setVisible(true);
     jLabel6.setVisible(true);
     }           
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed

        jComboBox8.addItemListener(new ItemListener() {
        @Override
        public void itemStateChanged(ItemEvent e) {

         if(e.getStateChange()==ItemEvent.SELECTED){
           NomVnetMAJ=jComboBox8.getSelectedItem().toString();

          }
        }
               
           });
        if(jComboBox8.getSelectedItem()==null){
            jTextField3.setVisible(false);
            jLabel15.setVisible(false);
            jLabel16.setVisible(false);
            jComboBox11.setVisible(false);
            jButton16.setVisible(false);
            jButton17.setVisible(false);
            jComboBox9.setVisible(false);
            jButton18.setVisible(false);
            jLabel12.setVisible(false);
        }else{
            jTextField3.setVisible(true);
            jLabel15.setVisible(true);
            jLabel16.setVisible(true);
            jComboBox11.setVisible(true);
            jButton16.setVisible(true);
            jButton17.setVisible(true);
            jComboBox9.setVisible(true);
            jButton18.setVisible(true);
            jLabel12.setVisible(true);
            
            edgevnetaMAJ.clear();
            edgevnetaMAJmodify.clear();
            VlanEdges.clear();
            combinarrayEdge.clear();
              JSONObject nomVnetAconfigurerObject = null;
              String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVnetMAJ+"'";
              //System.out.println(EditVnetInfo.get("BestPath"));
            try {
                GetVnets(sql);
            } catch (IOException ex) {
                Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                while(res.next()){
                    String s=res.getString("vnet");
                    nomVnetAconfigurerObject= new JSONObject(s);
                    VNET_MAJ=new JSONObject(s);
                    JSONArray h=new JSONArray(VNET_MAJ.getJSONArray("EdgeVlan").toString());
                    for (int j = 0; j < h.length(); j++) {
                      VlanEdges.add(h.getInt(j));
                      edgevnetaMAJ.add(h.getInt(j));
                      edgevnetaMAJmodify.add(h.getInt(j));
                      combinarrayEdge.add(h.getInt(j));
                    }
                    System.out.println(edgevnetaMAJ);
                    System.out.println(edgevnetaMAJmodify);
                }
            } catch (SQLException ex) {
                Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
            }
              jTextField3.setText(nomVnetAconfigurerObject.get("NomVlan").toString());
              JSONArray j=new JSONArray(nomVnetAconfigurerObject.getJSONArray("EdgeVlan").toString());
              jComboBox9.removeAllItems();
              for (int k = 0; k < j.length(); k++) {
              jComboBox9.insertItemAt(j.get(k).toString(), 0);
            }
            try {
                jComboBox11.removeAllItems();
                GetSwitches(jComboBox11);
            } catch (IOException ex) {
                Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        
        //jComboBox10.insertItemAt("VNET CONFIGURED", 0);
        //jComboBox10.insertItemAt("VNET NON CONFIGURED", 0);
          jPanel1.setVisible(false);
          jPanel2.setVisible(false);
          jPanel3.setVisible(false);
          jPanel6.setVisible(false);
          jPanel7.setVisible(true);
          jPanel8.setVisible(false);
          
            jTextField3.setVisible(false);
            jLabel15.setVisible(false);
            jLabel16.setVisible(false);
            jComboBox11.setVisible(false);
            jButton16.setVisible(false);
            jButton17.setVisible(false);
            jComboBox9.setVisible(false);
            jButton18.setVisible(false);
            
            jLabel14.setVisible(true);
            jComboBox8.setVisible(true);
            jComboBox8.removeAllItems();
          try {
              GetVnets("select *from `vnet_created` where 1");
              
          } catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          try {
              while(res.next()){
                  
                  String s=res.getString("vnet");
                  JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
                  jComboBox8.insertItemAt(j.get("NomVlan").toString(),0);
              }
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
            
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseClicked
       if(jComboBox9.getSelectedItem()==null){
       }else{
           
           VlanEdges.remove(new Integer (Integer.parseInt((String) jComboBox9.getSelectedItem())));
           edgevnetaMAJmodify.remove(new Integer (Integer.parseInt((String) jComboBox9.getSelectedItem())));
           combinarrayEdge.remove(new Integer (Integer.parseInt((String) jComboBox9.getSelectedItem())));
           jComboBox9.removeItem(jComboBox9.getSelectedItem());
           System.out.println(edgevnetaMAJmodify);
       }
    }//GEN-LAST:event_jButton16MouseClicked

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton17MouseClicked
        if(jComboBox11.getSelectedItem()==null){
        }else{
        if(edgevnetaMAJmodify.contains(Integer.parseInt(jComboBox11.getSelectedItem().toString()))){
        }
        else{ 
        VlanEdges.add(Integer.parseInt(jComboBox11.getSelectedItem().toString()));    
        edgevnetaMAJmodify.add(Integer.parseInt(jComboBox11.getSelectedItem().toString()));
        combinarrayEdge.add(Integer.parseInt(jComboBox11.getSelectedItem().toString()));        
        jComboBox9.insertItemAt(jComboBox11.getSelectedItem().toString(),0);
        }
        }
    }//GEN-LAST:event_jButton17MouseClicked

    private void jButton18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseClicked
        
        if(edgevnetaMAJ.equals(edgevnetaMAJmodify)&&jTextField3.getText()==jComboBox8.getSelectedItem()){
        JOptionPane.showMessageDialog(null, "PAS DE MODIFICATION A APPLIQEE ", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
           
           if(VNET_MAJ.get("IsConfigured").toString().equals("non")){
             if(edgevnetaMAJ.equals(edgevnetaMAJmodify)&&jTextField3.getText()!=jComboBox8.getSelectedItem()){
                 String sql1="UPDATE `vnet_created` SET `VNET`=JSON_SET(vnet, '$.NomVlan', '"+jTextField3.getText()+"') where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVnetMAJ+"'";
                 try {
                     pst=con.prepareStatement(sql1);
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                 int nb;
                 try {   
                     nb=pst.executeUpdate();

                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                      jComboBox8.removeAllItems();
                      edgevnetaMAJ.clear();
                      edgevnetaMAJmodify.clear();
 
                 try {
                     
                     GetVnets("select *from `vnet_created` where 1");
   
                 } catch (IOException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (SQLException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }
                 try {
                    while(res.next()){
                  
                  String s=res.getString("vnet");
                  JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
                  jComboBox8.insertItemAt(j.get("NomVlan").toString(),0);
                   }
                } catch (SQLException ex) {
                  Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }                      
             }else{
                     int NumVlanTraditionnel;
                     NumVlanTraditionnel=VNET_MAJ.getInt("NumVlan");
                     String sql1="DELETE FROM `vnet_created` WHERE JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVnetMAJ+"'";
                 try {
                     pst=con.prepareStatement(sql1);
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                     int nb;
                 try {
                     nb=pst.executeUpdate();
                     
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                     
                     NumVlan=NumVlanTraditionnel;
                     CreateVnet(jTextField3);
                      jComboBox8.removeAllItems();
                      edgevnetaMAJ.clear();
                      edgevnetaMAJmodify.clear();
                 try {

                     GetVnets("select *from `vnet_created` where 1");
    
                 } catch (IOException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (SQLException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }
                 try {
                    while(res.next()){
                  
                  String s=res.getString("vnet");
                  JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
                  jComboBox8.insertItemAt(j.get("NomVlan").toString(),0);
                   }
                } catch (SQLException ex) {
                  Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }                      
             }
             
             
           }else{
             if(edgevnetaMAJ.equals(edgevnetaMAJmodify)&&jTextField3.getText()!=jComboBox8.getSelectedItem()){
                 String sql1="UPDATE `vnet_created` SET `VNET`=JSON_SET(vnet, '$.NomVlan', '"+jTextField3.getText()+"') where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVnetMAJ+"'";
                 try {
                     pst=con.prepareStatement(sql1);
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                 int nb;
                 try {   
                     nb=pst.executeUpdate();
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                      jComboBox8.removeAllItems();
                      edgevnetaMAJ.clear();
                      edgevnetaMAJmodify.clear();
                 try {

                     GetVnets("select *from `vnet_created` where 1");
   
                 } catch (IOException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (SQLException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }
                 try {
                    while(res.next()){
                  
                  String s=res.getString("vnet");
                  JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
                  jComboBox8.insertItemAt(j.get("NomVlan").toString(),0);
                   }
                } catch (SQLException ex) {
                  Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }                      
             }else{
                 try {
                     SupprimerConfigurationVNET(jComboBox8);
                     int NumVlanTraditionnel;
                     NumVlanTraditionnel=VNET_MAJ.getInt("NumVlan");
                     String sql1="DELETE FROM `vnet_created` WHERE JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVnetMAJ+"'";
                     pst=con.prepareStatement(sql1);
                     int nb;
                     nb=pst.executeUpdate();
                     
                     NumVlan=NumVlanTraditionnel;
                     CreateVnet(jTextField3);
                     ConfigurerVnet(jTextField3.getText());
                     
                     jTextField3.setVisible(true);
                     jLabel15.setVisible(true);
                     jLabel16.setVisible(true);
                     jComboBox11.setVisible(true);
                     jButton16.setVisible(true);
                     jButton17.setVisible(true);
                     jComboBox9.setVisible(true);
                     jButton18.setVisible(true);
                     
                     jComboBox8.removeAllItems();
                      edgevnetaMAJ.clear();
                      edgevnetaMAJmodify.clear();
                      
                 try {
                     GetVnets("select *from `vnet_created` where 1");
    
                 } catch (IOException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (SQLException ex) {
                    Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }
                 try {
                    while(res.next()){
                  
                  String s=res.getString("vnet");
                  JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
                  jComboBox8.insertItemAt(j.get("NomVlan").toString(),0);
                   }
                } catch (SQLException ex) {
                  Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                   }
                 } catch (SQLException ex) {
                     Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                 }
                 
             }  
                 
           }
  JOptionPane.showMessageDialog(null, "Le VNET à été MAJ avec succés ", "", JOptionPane.INFORMATION_MESSAGE);   

        }
    }//GEN-LAST:event_jButton18MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        try {
          Desktop.getDesktop().browse(new URL("http://"+IP+":8080").toURI());
         } catch (Exception e) {}
    }//GEN-LAST:event_jButton4MouseClicked

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
          jComboBox6.addItemListener(new ItemListener() {
               @Override
               public void itemStateChanged(ItemEvent e) {

                   if(e.getStateChange()==ItemEvent.SELECTED){
                     //MAJoption=jComboBox6.getSelectedIndex();
                       //System.out.println(jComboBox10.getSelectedItem()); 
                    }
                }
               
           });
          if(jComboBox6.getSelectedItem()==null){
          }else{
          DefaultTableModel g=((DefaultTableModel)jTable1.getModel());
          g.setRowCount(0);//pour vider la table jtable1

          try {
              String nomVnetAediter = (String) jComboBox6.getSelectedItem();
              JSONObject nomVnetAediterObject = null;
              String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+nomVnetAediter+"'";
              //System.out.println(EditVnetInfo.get("BestPath"));
              
              GetVnets(sql);
              while(res.next()){
                  String s=res.getString("vnet");
                  nomVnetAediterObject= new JSONObject(s);
                  System.out.println(nomVnetAediterObject);
              }
              
              jPanel5.setVisible(true);
              jTextField2.setText((String) nomVnetAediterObject.get("NomVlan"));
              jTextField1.setText( nomVnetAediterObject.get("NumVlan").toString());
              JSONArray j=new JSONArray(nomVnetAediterObject.get("EdgeVlan").toString());
              jComboBox7.removeAllItems();
              for (int k = 0; k <j.length(); k++) {
                 jComboBox7.insertItemAt( j.get(k).toString(), 0);
              }
              
              
              
              
          ArrayList<Integer>ToutLesSwitchDeVlan=new ArrayList<Integer>();
          JSONArray Ed=new JSONArray(nomVnetAediterObject.get("BestPathBetweenAll").toString());
          for (int m = 0; m < Ed.length(); m++) {
                JSONArray Ed1=new JSONArray(Ed.get(m).toString());
                  for (int k = 0; k < Ed1.length(); k++) {
                     ToutLesSwitchDeVlan.add(Ed1.getInt(k));
                  }
 
              }
              Set<Integer> set= new HashSet<>(ToutLesSwitchDeVlan);
              ToutLesSwitchDeVlan.clear();
              ToutLesSwitchDeVlan.addAll(set); // 3andi tout les switch linahtajhom sans repitition

              for (int i=0;i<ToutLesSwitchDeVlan.size();i++){
                  
                  URL url = null;
                  try {
                    String nbrZeroUrl="";  
                    System.out.println(Integer.toHexString(16).length());
                      for (int n = 0; n < 16-Integer.toHexString((int) ToutLesSwitchDeVlan.get(i)).length(); n++) {
                        nbrZeroUrl=nbrZeroUrl+0;  
                      }
                    url = new URL ("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int) ToutLesSwitchDeVlan.get(i))+"/"+nomVnetAediterObject.get("NumVlan"));
                    swId=Integer.toHexString((int) ToutLesSwitchDeVlan.get(i));  
                      getswitchrouteaddresse(url);
                      ((DefaultTableModel)jTable1.getModel()).insertRow(jTable1.getRowCount(),new Object[]{ swId,config}); 
                      /*setDataVector(new Object[][]{
                      {swId,config}
                      }, new Object[]{"Switch_ID","Configuration"});*/
                      
                      
                      

                  } catch (MalformedURLException ex) {
                      Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  for (int k = 0; k <((DefaultTableModel)jTable1.getModel()).getRowCount(); k++) {
                      jTable1.setRowHeight(k, 150);
                  }
              }
              
              
              
              
              
              
              
              
              
              
              
              
              
              
          } catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }          
          }   
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
     jComboBox5.addItemListener(new ItemListener() {
               @Override
               public void itemStateChanged(ItemEvent e) {

                   if(e.getStateChange()==ItemEvent.SELECTED){
                     MAJoption=jComboBox5.getSelectedIndex();
                       //System.out.println(jComboBox10.getSelectedItem()); 
                    }
                }
               
           });
     if(jComboBox5.getSelectedItem()==null){
     jButton13.setVisible(false);
     }else{
     jButton13.setVisible(true);
     }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
          jPanel1.setVisible(false);
          jPanel2.setVisible(false);
          jPanel3.setVisible(false);
          jPanel6.setVisible(false);
          jPanel7.setVisible(false);
          jPanel8.setVisible(true);
          DefaultTableModel g=((DefaultTableModel)jTable2.getModel());
          g.setRowCount(0);//pour vider la table jtable2

          
              String nomVnetAediter = (String) jComboBox6.getSelectedItem();
              JSONObject nomVnetAediterObject = null;
              String sql="select *from `vnet_created` where 1";
              //System.out.println(EditVnetInfo.get("BestPath"));
          try {              
              GetVnets(sql);
          } catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          try {
              while(res.next()){
                  String s=res.getString("vnet");
                  nomVnetAediterObject= new JSONObject(s);
                  JSONArray j=new JSONArray(nomVnetAediterObject.getJSONArray("EdgeVlan").toString());
                  ((DefaultTableModel)jTable2.getModel()).insertRow(jTable1.getRowCount(),new Object[]{ nomVnetAediterObject.getString("NomVlan"),nomVnetAediterObject.getInt("NumVlan"),j.toString(),nomVnetAediterObject.getString("IsConfigured")}); 
              }
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
     jComboBox3.addItemListener(new ItemListener() {
      @Override
               public void itemStateChanged(ItemEvent e) {

                   if(e.getStateChange()==ItemEvent.SELECTED){
                     MAJoption=jComboBox3.getSelectedIndex();
                       //System.out.println(jComboBox10.getSelectedItem()); 
                    }
                }
               
           });
     if(jComboBox3.getSelectedItem()==null){
         jButton15.setVisible(false);
     }else{
         jButton15.setVisible(true);
     }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void IPCONTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IPCONTMouseClicked
        IPCONT.setText("");
    }//GEN-LAST:event_IPCONTMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
 
        //fonction BTN validate ip controller
    public void ValidatIPcontroller(){
    IP=IPCONT.getText();
       if(IpValidateur(IP)==true){
           try {
               if(TestIpControleur(IP)==true)
               {
                   //disactivate IpController field and validate button 
                   IPCONT.setEnabled(false);
                   jButton1.setEnabled(false);
                   //activate  all application option 
                   jButton2.setEnabled(true);
                   jButton6.setEnabled(true);
                   jButton8.setEnabled(true);
                   jButton3.setEnabled(true);
                   jButton5.setEnabled(true);
                   jButton4.setEnabled(true);
                   jButton7.setEnabled(true);
                jButton2.setVisible(true);
                jButton3.setVisible(true);
                jButton4.setVisible(true);
                jButton5.setVisible(true);
                jButton6.setVisible(true);
                jButton7.setVisible(true);
                jButton8.setVisible(true);
               }   
               else
              JOptionPane.showMessageDialog(null, "Adresse IP valide \n la connectivité ou controlleur SDN est echoué !! ", "Error", JOptionPane.ERROR_MESSAGE);    
           } catch (IOException ex) {
              JOptionPane.showMessageDialog(null, "la connectivité ou controlleur SDN est echoué !! ", "Error", JOptionPane.ERROR_MESSAGE);    
 
                }
        }
       else
       JOptionPane.showMessageDialog(null, "Adresse IP non valide ", "Error", JOptionPane.ERROR_MESSAGE);    
    }
    
    
        public static boolean IpValidateur (String ip){
		// Get an InetAddressValidator
      InetAddressValidator validator = InetAddressValidator.getInstance();

		// Validate an IPv4 address
      if (validator.isValidInet4Address(ip)) {
        return true;
       }
      else {
	return false; 
       }
    }
    
    
        // fonction pour tester la connectiviter vers le controleur
    public static boolean TestIpControleur(String IP) throws IOException {
      URL urlForGetRequest = new URL("http://"+IP+":8080/v1.0/topology/switches/0000000000000001");
      String readLine = null;
      HttpURLConnection conection = (HttpURLConnection) urlForGetRequest.openConnection();
      conection.setRequestMethod("GET");
      conection.setConnectTimeout(5000);
      conection.setRequestProperty("userId", "a1bcdef"); // set userId its a sample here
      int responseCode = conection.getResponseCode();
      if (responseCode == HttpURLConnection.HTTP_OK) {
          
       return true;    
        }
      else {
        System.out.println(responseCode);  
        return false;
      }
    }
    
    
    //generate a VLAN number
    public static int  generate_num_vlan(){
        int num_vlan=(int)(4096*Math.random());
           return num_vlan;
    }
    
    
       // recuperer les switches de la topologie SDN
    public static void GetSwitches(JComboBox j) throws IOException{
      String sURL = "http://"+IP+":8080/v1.0/topology/switches"; // Mettez l'adresse de la machine virtuelle à la place de @IP-CONTROLEUR
      URL url = new URL(sURL);
      URLConnection request = url.openConnection();
      request.connect();

      JsonParser jp = new JsonParser(); 
      JsonElement root1 = jp.parse(new InputStreamReader( (InputStream) request.getContent()));
      String rootbj = root1.toString();
      JSONArray al = new JSONArray(rootbj);
      JSONObject obbb = new JSONObject();
      NbrSwitchTopoloigy=al.length();
      for(int i = 0 ; i < al.length() ; i++){
      String dpid = "dpid";
      obbb = (JSONObject) al.get(i);
      int SwitchId=Integer.parseInt((String) obbb.get(dpid),16);
      j.insertItemAt(Integer.toString(SwitchId),0);
      }
    }
    
    
    public static void BestPathBetweenAll() throws IOException{
    combination(combinarrayEdge,TheCombinition);
    System.out.println(TheCombinition.length());
    for (int i = 0; i <TheCombinition.length() ; i++) {
        
      JSONArray index=new JSONArray(TheCombinition.get(i).toString());
        System.out.println(index);
      
       addEdge(adj,Integer.parseInt(index.get(0).toString()),Integer.parseInt(index.get(1).toString()),NbrSwitchTopoloigy+1);

        
    }
}
    
    
    public static void addEdge(ArrayList<ArrayList<Integer>> adj,int s,int dest,int v) throws  IOException 
      {             
      String sURL = "http://"+IP+":8080/v1.0/topology/links"; // Mettez l'adresse de la machine virtuelle à la place de @IP-CONTROLEUR
      URL url = new URL(sURL);
      URLConnection request = url.openConnection();
      request.connect();

      JsonParser jp = new JsonParser(); 
      JsonElement root1 = jp.parse(new InputStreamReader( (InputStream) request.getContent()));
      String rootbj = root1.toString();
      JSONArray al = new JSONArray(rootbj);
      JSONObject obbb = new JSONObject();
       
      
    for(int i = 0 ; i < al.length() ; i++){
      String dpid = "dpid";
      obbb = (JSONObject) al.get(i);
      
      JSONObject src=obbb.getJSONObject("src");
      JSONObject dst=obbb.getJSONObject("dst"); 
      String f=src.getString("dpid");
      String f1=dst.getString("dpid");
      adj.get(Integer.parseInt(f, 16)).add(Integer.parseInt(f1, 16)); 


    } //end for 
    
      int pred[] = new int[NbrSwitchTopoloigy+1]; 
      int dist[] = new int[NbrSwitchTopoloigy+1];
      
                 if (BFS(adj, s, dest, v, pred, dist) == false) { 
	     System.out.println("Given source and destination" + "are not connected"); 
										
		return; 
		}
      // LinkedList to store path 
      LinkedList<Integer> path = new LinkedList<Integer>(); 
      int crawl = dest; 
      path.add(crawl); 
      while (pred[crawl] != -1) { 
      path.add(pred[crawl]); 
      crawl = pred[crawl]; 
       } 

	// Print distance 
	System.out.println("Shortest path length is: " + dist[dest]); 

	// Print path 
	System.out.println("Path is ::");
        JSONArray part=new JSONArray();
	for (int i = path.size() - 1; i >= 0; i--) { 
	System.out.print(path.get(i) + " ");
        
        part.put(path.get(i));
        
		}
        BestPathAllEdgeVlan.put(part);
          System.out.println(BestPathAllEdgeVlan);
        
	}


// BFS algorithme
    private static boolean BFS(ArrayList<ArrayList<Integer>> adj, int src, int dest, int v, int pred[], int dist[])
								 
	{ 
		// a queue to maintain queue of vertices whose 
		// adjacency list is to be scanned as per normal 
		// BFS algorithm using LinkedList of Integer type 
		LinkedList<Integer> queue = new LinkedList<Integer>(); 

		// boolean array visited[] which stores the 
		// information whether ith vertex is reached 
		// at least once in the Breadth first search 
		boolean visited[] = new boolean[v]; 

		// initially all vertices are unvisited 
		// so v[i] for all i is false 
		// and as no path is yet constructed 
		// dist[i] for all i set to infinity 
		for (int i = 0; i < v; i++) { 
			visited[i] = false; 
			dist[i] = Integer.MAX_VALUE; 
			pred[i] = -1; 
		} 

		// now source is first to be visited and 
		// distance from source to itself should be 0 
		visited[src] = true; 
		dist[src] = 0; 
		queue.add(src); 

		// bfs Algorithm 
		while (!queue.isEmpty()) { 
			int u = queue.remove(); 
			for (int i = 0; i < adj.get(u).size(); i++) { 
				if (visited[adj.get(u).get(i)] == false) { 
					visited[adj.get(u).get(i)] = true; 
					dist[adj.get(u).get(i)] = dist[u] + 1; 
					pred[adj.get(u).get(i)] = u; 
					queue.add(adj.get(u).get(i)); 

					// stopping condition (when we find 
					// our destination) 
					if (adj.get(u).get(i) == dest) 
						return true; 
				} 
			} 
		} 
		return false; 
	}
    
    
    public static void combination(ArrayList<Integer>R,JSONArray allcombinition){
    allcombinition=new JSONArray();
    for (int i = 0; i < R.size(); i++) {
        i=0;
        for (int j = 0; j < R.size(); j++) {
            if(i==j){}else{
                JSONArray arr=new JSONArray();
                arr.put(R.get(i));
                arr.put(R.get(j));
                allcombinition.put(arr);
            }
            
        }
        R.remove(i); 
        
    }
    
    //JSONArray jj=new JSONArray(allcombinition.get(0).toString());
    //System.out.println(allcombinition.length());
    TheCombinition=new JSONArray(allcombinition.toString());
}
    
    
  public static void GetVnets(String sql) throws IOException, SQLException{
                               try {
            con =DriverManager.getConnection(database,user_DB,passw);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

            Statement req;
            req = con.createStatement();
            ResultSet ress;
            res = req.executeQuery(sql);
            
      }
          
          
          
  public static void postJson(URL url,String s) throws MalformedURLException, IOException{
  //URL url = new URL ("http://192.168.43.218:8080/router/0000000000000001/10");
  HttpURLConnection con = (HttpURLConnection)url.openConnection();
  con.setRequestMethod("POST");
  con.setRequestProperty("Content-Type", "application/json; utf-8");
  con.setRequestProperty("Accept", "application/json");
  con.setDoOutput(true);
  try(OutputStream os = con.getOutputStream()) {
    byte[] input = s.getBytes("utf-8");
    os.write(input, 0, input.length);
      System.out.println(con.getResponseCode());
    
   }
  try(BufferedReader br = new BufferedReader(
  new InputStreamReader(con.getInputStream(), "utf-8"))) {
    StringBuilder response = new StringBuilder();
    String responseLine = null;
    while ((responseLine = br.readLine()) != null) {
        response.append(responseLine.trim());
    }
}
}
  
    public static void DeleteJson(URL url,String s) throws MalformedURLException, IOException{
  //URL url = new URL ("http://192.168.43.218:8080/router/0000000000000001/10");
  HttpURLConnection con = (HttpURLConnection)url.openConnection();
  con.setRequestMethod("DELETE");
  con.setRequestProperty("Content-Type", "application/json; utf-8");
  con.setRequestProperty("Accept", "application/json");
  con.setDoOutput(true);
  try(OutputStream os = con.getOutputStream()) {
    byte[] input = s.getBytes("utf-8");
    os.write(input, 0, input.length);
      System.out.println(con.getResponseCode());
    
   }

}
public static void DeleteRoutesAddr(URL url) throws MalformedURLException, IOException{
      URLConnection request = url.openConnection();
      request.connect();

      JsonParser jp = new JsonParser(); 
      JsonElement root1 = jp.parse(new InputStreamReader( (InputStream) request.getContent()));
      String rootbj = root1.toString();
      JSONArray al = new JSONArray(rootbj);
      
      for(int i = 0 ; i < al.length() ; i++){
        JSONObject obbb = new JSONObject();
        obbb = (JSONObject) al.get(i);
        JSONArray interNetwork = new JSONArray(obbb.getJSONArray("internal_network").toString());
        
        JSONObject routes_addresse = new JSONObject();
        routes_addresse = (JSONObject) interNetwork.get(0);
        
        JSONArray Routes = new JSONArray(routes_addresse.getJSONArray("route").toString());
        JSONArray Addresses = new JSONArray(routes_addresse.getJSONArray("address").toString());
          for (int j = 0; j < Routes.length(); j++) {
              System.out.println(Routes.get(j));
              JSONObject f=new JSONObject();
              JSONObject hh=(JSONObject) Routes.get(j);
              int R=hh.getInt("route_id");
              f.put("route_id",R);
              System.out.println(f);
              DeleteJson(url,f.toString());    
          }
          for (int j = 0; j < Addresses.length(); j++) {
              System.out.println(Addresses.get(j));
              JSONObject f=new JSONObject();
              JSONObject hh=(JSONObject) Addresses.get(j);
              int R=hh.getInt("address_id");
              f.put("address_id",R);
              System.out.println(f);
              DeleteJson(url,f.toString());
          }
          
 
        }
      
}
  


public static void getswitchrouteaddresse(URL url) throws MalformedURLException, IOException{
      URLConnection request = url.openConnection();
      request.connect();

      JsonParser jp = new JsonParser(); 
      JsonElement root1 = jp.parse(new InputStreamReader( (InputStream) request.getContent()));
      String rootbj = root1.toString();
      JSONArray al = new JSONArray(rootbj);
      JSONObject obbb = new JSONObject();
      for(int i = 0 ; i < al.length() ; i++){
      
        obbb = (JSONObject) al.get(i);
        JSONArray interNetwork = new JSONArray(obbb.getJSONArray("internal_network").toString());
        
        JSONObject routes_addresse = new JSONObject();
        routes_addresse = (JSONObject) interNetwork.get(0);
        
        JSONArray Routes = new JSONArray(routes_addresse.getJSONArray("route").toString());
        JSONArray Addresses = new JSONArray(routes_addresse.getJSONArray("address").toString());
        System.out.println(Routes);
        System.out.println(Addresses);

        config="<html>ROUTES:";
        for (int k = 0; k < Routes.length(); k++) {
          JSONObject ff=new JSONObject(Routes.get(k).toString());
            config=config+"<br>"+ff;
            System.out.println(ff);
            ff=null;
        }
         config=config+"<br>Addresses:";             
        for (int k = 0; k < Addresses.length(); k++) {
          JSONObject ff=new JSONObject(Addresses.get(k).toString());
          config=config+"<br>"+ff;
          ff=null;
        }
    
        
        }}

public static void SupprimerConfigurationVNET(JComboBox jcombobox){
          try {
              String nomVnetAsupprimer=(String) jcombobox.getSelectedItem();
              JSONObject nomVnetAsupprimerObject = null;
              String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+nomVnetAsupprimer+"'";
              //System.out.println(EditVnetInfo.get("BestPath")); 
              GetVnets(sql);
              while(res.next()){
                  String s=res.getString("vnet");
                  nomVnetAsupprimerObject= new JSONObject(s);
                  System.out.println(nomVnetAsupprimerObject);
              }
         
              
          ArrayList<Integer>ToutLesSwitchDeVlan=new ArrayList<Integer>();
          JSONArray Ed=new JSONArray(nomVnetAsupprimerObject.get("BestPathBetweenAll").toString());
              for (int j = 0; j < Ed.length(); j++) {
                JSONArray Ed1=new JSONArray(Ed.get(j).toString());
                  for (int k = 0; k < Ed1.length(); k++) {
                     ToutLesSwitchDeVlan.add(Ed1.getInt(k));
                    }
 
              }
              Set<Integer> set= new HashSet<>(ToutLesSwitchDeVlan);
              ToutLesSwitchDeVlan.clear();
              ToutLesSwitchDeVlan.addAll(set);
              
              System.out.println(ToutLesSwitchDeVlan);
              //hadi dans le cas win l'administrator veut concerver les information de vnet dans la bdd
                for (int j = 0; j < ToutLesSwitchDeVlan.size(); j++) {
                   String nbrZeroUrl="";  
                   for (int k = 0; k < 16-Integer.toHexString((int) ToutLesSwitchDeVlan.get(j)).length(); k++) {
                   nbrZeroUrl=nbrZeroUrl+0;  
                   }  
                   
                   URL urlForDeleteRequest = new URL("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int) ToutLesSwitchDeVlan.get(j))+"/"+nomVnetAsupprimerObject.get("NumVlan"));      
                    System.out.println(urlForDeleteRequest);
                   DeleteRoutesAddr(urlForDeleteRequest);
                }
     
          } catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
}

public static void CreateVnet(JTextField jtextfield){
         
         try {                                       
             
             NomVlan=jtextfield.getText();   //nahtajo
             //verifier est que ce nom il existe deja dans la base de donnee
             String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+NomVlan+"'";
             GetVnets(sql);
             if(res.next()){
               JOptionPane.showMessageDialog(null, "the '"+NomVlan+"'is exist \n please change it !!!", "Error", JOptionPane.ERROR_MESSAGE);   
             }else{
             
             
             //verifie est que le vlan generer il exist deja dans la base de donnee
             ArrayList<Integer>E=new ArrayList<>();
             //sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NumVlan'))='"+NumVlan+"'";
             sql="select *from `vnet_created`";
             GetVnets(sql);
             ArrayList<Integer>listnumvlan=new ArrayList<>();
             while(res.next()){
             String s=res.getString("vnet");    
             JSONObject j=new JSONObject(s);
             listnumvlan.add(j.getInt("NumVlan"));
             }
             while(listnumvlan.contains(NumVlan)){
              NumVlan=generate_num_vlan();
             }
             if( jtextfield.getText().isEmpty())NomVlan="VNET"+NumVlan;
             else NomVlan=jtextfield.getText();
             JSONObject InsertObject=new JSONObject();
             InsertObject.put("NomVlan",NomVlan.toString());
             InsertObject.put("NumVlan",NumVlan);

             for (int i = 0; i < NbrSwitchTopoloigy+1; i++) {
                 adj.add(new ArrayList<Integer>());
             }
             try {
                 BestPathBetweenAll();
             } catch (IOException ex) {
                 Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
             }
             
             
             InsertObject.put("EdgeVlan",VlanEdges);
             InsertObject.put("Combinations",TheCombinition);
             InsertObject.put("BestPathBetweenAll",BestPathAllEdgeVlan);
             InsertObject.put("IsConfigured","non");
             System.out.println(InsertObject);
             //inserer dans la bdd le Vnet cree
             try {
                 con =DriverManager.getConnection(database,user_DB,passw);
             } catch (SQLException ex) {
                 Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
             }
             String sql1="insert into vnet_created values(?)";
             try{
                 pst=con.prepareStatement(sql1);
                 pst.setString(1,InsertObject.toString());
                 int nb;
                 nb=pst.executeUpdate();
                 for (int j = 0; j <combinarrayEdge.size()+1; j++) {
                     
                     combinarrayEdge.clear();
                 }
                 for (int j = 0; j < VlanEdges.size()+1; j++) {
                     
                     VlanEdges.clear();
                 }
                BestPathAllEdgeVlan=new JSONArray();
                 jComboBox2.removeAllItems();
             }
             
             catch(Exception e){
                 System.out.println("error");
             }
             
         }} catch (IOException ex) {
             Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
}

public static void ConfigurerVnet(String NOMVNETACONFIGURER){
          try {
              nomVnetAconfigurer=NOMVNETACONFIGURER;
              JSONObject nomVnetAconfigurerObject = null;
              String sql="select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.NomVlan'))='"+nomVnetAconfigurer+"'";
              //System.out.println(EditVnetInfo.get("BestPath"));
              
              GetVnets(sql);
              while(res.next()){
                  String s=res.getString("vnet");
                  nomVnetAconfigurerObject= new JSONObject(s);
                  System.out.println(nomVnetAconfigurerObject);
              }
              
              ArrayList<String>EdgeAddress=new ArrayList<String>();
              ArrayList<Integer>EdgesID=new ArrayList<Integer>();
              int cpt=0;
              JSONArray Edgg=new JSONArray(nomVnetAconfigurerObject.get("EdgeVlan").toString());
              System.out.println(Edgg.length());
              for (int j = 0; j < Edgg.length(); j++) {
                  EdgesID.add(Edgg.getInt(j));
              }
              for (int i=0;i<Edgg.length();i++){
                  
                  URL url = null;
                  try {
                    String nbrZeroUrl="";  
                    System.out.println(Integer.toHexString(16).length());
                      for (int j = 0; j < 16-Integer.toHexString((int) Edgg.get(i)).length(); j++) {
                        nbrZeroUrl=nbrZeroUrl+0;  
                      }
                    url = new URL ("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int) Edgg.get(i))+"/"+nomVnetAconfigurerObject.get("NumVlan"));
                  } catch (MalformedURLException ex) {
                      Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  
                  
                  try {
                      JSONObject f=new JSONObject();
                      cpt++;
                      String addr="192.168."+cpt+".1/24";
                      f.put("address",addr);
                      postJson(url,f.toString());
                      EdgeAddress.add(addr);
                      f.remove("address");
                  } catch (IOException ex) {
                      Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                  } 
              }
              System.out.println(EdgeAddress);
          //mainetnant les addresse de routage 10.0.0.
          ArrayList<Integer>ToutLesSwitchDeVlan=new ArrayList<Integer>();
          JSONArray Ed=new JSONArray(nomVnetAconfigurerObject.get("BestPathBetweenAll").toString());
              
          ArrayList<String>addressDeroutage=new ArrayList<String>();
              for (int j = 0; j < Ed.length(); j++) {
                JSONArray Ed1=new JSONArray(Ed.get(j).toString());
                  for (int k = 0; k < Ed1.length(); k++) {
                     ToutLesSwitchDeVlan.add(Ed1.getInt(k));
                  }
 
              }
              Set<Integer> set= new HashSet<>(ToutLesSwitchDeVlan);
              ToutLesSwitchDeVlan.clear();
              ToutLesSwitchDeVlan.addAll(set); // 3andi tout les switch linahtajhom sans repitition
              System.out.println(ToutLesSwitchDeVlan); 
              
              int cptswitchcore=0;
              for (int i=0;i<ToutLesSwitchDeVlan.size();i++){
                  
                  URL url = null;
                  try {
                    String nbrZeroUrl="";  
                    System.out.println(Integer.toHexString(16).length());
                      for (int j = 0; j < 16-Integer.toHexString((int) ToutLesSwitchDeVlan.get(i)).length(); j++) {
                        nbrZeroUrl=nbrZeroUrl+0;  
                      }
                    url = new URL ("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int) ToutLesSwitchDeVlan.get(i))+"/"+nomVnetAconfigurerObject.get("NumVlan"));
                  } catch (MalformedURLException ex) {
                      Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  
                  
                  try {
                      JSONObject f=new JSONObject();
                      cptswitchcore++;
                      String addr="10.0.0."+cptswitchcore+"/24";
                      f.put("address",addr);
                      postJson(url,f.toString());
                      addressDeroutage.add("10.0.0."+cptswitchcore);
                      f.remove("address");
                  } catch (IOException ex) {
                      Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
                  } 
              }
              System.out.println(addressDeroutage);
              
              






//configurer les routes
int NV=       (int) nomVnetAconfigurerObject.get("NumVlan");
JSONArray BP=new JSONArray(nomVnetAconfigurerObject.get("EdgeVlan").toString());
ArrayList<Integer> R=new ArrayList<>();
JSONArray bestpathroutage=new JSONArray(nomVnetAconfigurerObject.get("BestPathBetweenAll").toString());
for(int i=0;i<BP.length();i++){
R.add((Integer) BP.get(i));
}         
          String distination;
  
          for (int i=0;i<bestpathroutage.length();i++){//nab3ad nadalha hadi
           
                JSONArray b=new JSONArray(bestpathroutage.get(i).toString()); 
                int nnn=(int) b.get(b.length()-1);
                int index1=EdgesID.indexOf(nnn);
                distination=EdgeAddress.get(index1).toString();  
                for(int j=0;j<b.length()-1;j++){
                    String nbrZeroUrl="";  
                    System.out.println(Integer.toHexString(16).length());
                      for (int l = 0; l < 16-Integer.toHexString((int)b.get(j)).length(); l++) {
                        nbrZeroUrl=nbrZeroUrl+0;  
                      }                    
                URL url = new URL ("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int)b.get(j))+"/"+nomVnetAconfigurerObject.get("NumVlan"));
                System.out.println(url);
                int nn=(int) b.get(j+1);
                int index=ToutLesSwitchDeVlan.indexOf(nn);
                 
                JSONObject h=new JSONObject();
                h.put("destination",distination.toString());
                h.put("gateway",addressDeroutage.get(index).toString());
                System.out.println(h);
                postJson(url,h.toString());
                h.remove("destination");
                h.remove("gateway");
                 }
           
          }

          for (int i=0;i<bestpathroutage.length();i++){//nab3ad nadalha hadi
           
                JSONArray b=new JSONArray(bestpathroutage.get(i).toString()); 
                int nnn=(int) b.get(0);
                int index1=EdgesID.indexOf(nnn);
                distination=EdgeAddress.get(index1).toString();  
                
                for(int j=b.length()-1;j>0;j--){
                  String nbrZeroUrl="";  
                  System.out.println(Integer.toHexString(16).length());
                  for (int l = 0; l < 16-Integer.toHexString((int)b.get(j)).length(); l++) {
                  nbrZeroUrl=nbrZeroUrl+0;  
                }                    
                URL url = new URL ("http://"+IP+":8080/router/"+nbrZeroUrl+Integer.toHexString((int)b.get(j))+"/"+nomVnetAconfigurerObject.get("NumVlan"));
                System.out.println(url);
                int nn=(int) b.get(j-1);
                int index=ToutLesSwitchDeVlan.indexOf(nn);
                 
                JSONObject h=new JSONObject();
                h.put("destination",distination.toString());
                h.put("gateway",addressDeroutage.get(index).toString());
                System.out.println(h);
                postJson(url,h.toString());
                h.remove("destination");
                h.remove("gateway");
                 }
           
          }




              
           //make the vlan state  is configured   
            String sql1="UPDATE `vnet_created` SET `VNET`=JSON_SET(vnet, '$.IsConfigured', 'yes') where JSON_UNQUOTE(json_extract(vnet,'$.NumVlan'))="+NV;
                 pst=con.prepareStatement(sql1);
                 int nb;
                 nb=pst.executeUpdate();              
    
              
              
              
          } catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
          
        jComboBox3.removeAllItems();
        jPanel1.setVisible(false);
        jPanel3.setVisible(true);
          //try hadi for get the vlan that the administrator wanna configure 
          try {            
              GetVnets("select *from `vnet_created` where JSON_UNQUOTE(json_extract(vnet,'$.IsConfigured'))='non'");             
              while(res.next()){
                   
               String s=res.getString("vnet");
               JSONObject j= new JSONObject(s);//ana hna ma3natha raw 3andi jsonobjet  n9adr ndir ay haja dok
               jComboBox3.insertItemAt(j.get("NomVlan").toString(),0);
          }} catch (IOException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(VNET_MAnager.class.getName()).log(Level.SEVERE, null, ex);
          }
}
public void getContent(){
jButton1.setOpaque(false);
jButton1.setFocusPainted(false);
jButton1.setBorderPainted(false);
jButton1.setContentAreaFilled(false);

jButton2.setOpaque(false);
jButton2.setFocusPainted(false);
jButton2.setBorderPainted(false);
jButton2.setContentAreaFilled(false);

jButton3.setOpaque(false);
jButton3.setFocusPainted(false);
jButton3.setBorderPainted(false);
jButton3.setContentAreaFilled(false);

jButton4.setOpaque(false);
jButton4.setFocusPainted(false);
jButton4.setBorderPainted(false);
jButton4.setContentAreaFilled(false);

jButton5.setOpaque(false);
jButton5.setFocusPainted(false);
jButton5.setBorderPainted(false);
jButton5.setContentAreaFilled(false);

jButton6.setOpaque(false);
jButton6.setFocusPainted(false);
jButton6.setBorderPainted(false);
jButton6.setContentAreaFilled(false);

jButton7.setOpaque(false);
jButton7.setFocusPainted(false);
jButton7.setBorderPainted(false);
jButton7.setContentAreaFilled(false);

jButton8.setOpaque(false);
jButton8.setFocusPainted(false);
jButton8.setBorderPainted(false);
jButton8.setContentAreaFilled(false);

IPCONT.setBorder(null);
IPCONT.setBackground(new Color(0, 0, 0, 0));

IPCONT.setText("Introduisez l‘ @IP du contrôleur : 192.168.112.128");

//setBorder(BorderFactory.createEmptyBorder(0,0,0,0));

                jPanel1.setVisible(false);
                jPanel2.setVisible(false);
                jPanel3.setVisible(false);
                jPanel6.setVisible(false);
                jPanel7.setVisible(false);
                jPanel7.setVisible(false);
                jPanel8.setVisible(false);
                
                jButton2.setVisible(false);
                jButton3.setVisible(false);
                jButton4.setVisible(false);
                jButton5.setVisible(false);
                jButton6.setVisible(false);
                jButton7.setVisible(false);
                jButton8.setVisible(false);}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VNET_MAnager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VNET_MAnager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VNET_MAnager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VNET_MAnager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                    new VNET_MAnager().setVisible(true);
jButton1.setOpaque(false);
jButton1.setFocusPainted(false);
jButton1.setBorderPainted(false);
jButton1.setContentAreaFilled(false);

jButton2.setOpaque(false);
jButton2.setFocusPainted(false);
jButton2.setBorderPainted(false);
jButton2.setContentAreaFilled(false);

jButton3.setOpaque(false);
jButton3.setFocusPainted(false);
jButton3.setBorderPainted(false);
jButton3.setContentAreaFilled(false);

jButton4.setOpaque(false);
jButton4.setFocusPainted(false);
jButton4.setBorderPainted(false);
jButton4.setContentAreaFilled(false);

jButton5.setOpaque(false);
jButton5.setFocusPainted(false);
jButton5.setBorderPainted(false);
jButton5.setContentAreaFilled(false);

jButton6.setOpaque(false);
jButton6.setFocusPainted(false);
jButton6.setBorderPainted(false);
jButton6.setContentAreaFilled(false);

jButton7.setOpaque(false);
jButton7.setFocusPainted(false);
jButton7.setBorderPainted(false);
jButton7.setContentAreaFilled(false);

jButton8.setOpaque(false);
jButton8.setFocusPainted(false);
jButton8.setBorderPainted(false);
jButton8.setContentAreaFilled(false);

IPCONT.setBorder(null);
IPCONT.setBackground(new Color(0, 0, 0, 0));

IPCONT.setText("Introduisez l‘ @IP du contrôleur : 192.168.112.128");

//setBorder(BorderFactory.createEmptyBorder(0,0,0,0));

                jPanel1.setVisible(false);
                jPanel2.setVisible(false);
                jPanel3.setVisible(false);
                jPanel6.setVisible(false);
                jPanel7.setVisible(false);
                jPanel7.setVisible(false);
                jPanel8.setVisible(false);
                
                jButton2.setVisible(false);
                jButton3.setVisible(false);
                jButton4.setVisible(false);
                jButton5.setVisible(false);
                jButton6.setVisible(false);
                jButton7.setVisible(false);
                jButton8.setVisible(false);
                
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField IPCONT;
    private static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private static javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private static javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private static javax.swing.JButton jButton3;
    private static javax.swing.JButton jButton4;
    private static javax.swing.JButton jButton5;
    private static javax.swing.JButton jButton6;
    private static javax.swing.JButton jButton7;
    private static javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox11;
    private static javax.swing.JComboBox<String> jComboBox2;
    private static javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private static javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JPanel jPanel1;
    private static javax.swing.JPanel jPanel2;
    private static javax.swing.JPanel jPanel3;
    private static javax.swing.JPanel jPanel4;
    private static javax.swing.JPanel jPanel5;
    private static javax.swing.JPanel jPanel6;
    private static javax.swing.JPanel jPanel7;
    private static javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
